ALIAS
Well I found a much better solution which avoids "double parsing". I 
created my own QueryParser by extending the existing. Then I identified 
  
five methods to override: 

getFieldQuery(String field,String queryText) 
getFuzzyQuery(String field,String termStr, float minSimilarity) 
getPrefixQuery(String field,String termStr) 
getRangeQuery(String field,String part1, String part2, boolean 
 inclusive) 
getWildcardQuery(String field,String termStr) 

In each of this methods I call my own method: 
field = translateField(field); 
before passing the values to it's super implementation. 

And my translateField method uses a Hashtable for looking up field 
aliases. It it finds an alias it returns it, otherwise the field is 
returned without modification. Therefore I have my field aliases 
 without 
having to implement an own parser - thanks to the good OO-design of the 
  
QueryParser class. 

FoundatioFx/Foundatio.Parsers
https://github.com/FoundatioFx/Foundatio.Parsers

enh tech
https://blog.swwomm.com/2013/07/tuning-lucene-to-get-most-relevant.html
